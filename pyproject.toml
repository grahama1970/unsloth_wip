[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "unsloth"
version = "0.1.0"
description = "Unsloth fine-tuning pipeline for LoRA adapters"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Graham Anderson", email = "graham@grahama.co"}
]
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.35.0",
    "datasets>=2.16.0",
    "huggingface-hub>=0.20.0",
    "pydantic>=2.0.0",
    "loguru>=0.7.0",
    "python-dotenv>=1.0.0",
    "tenacity>=8.2.0",
    "rapidfuzz>=3.0.0",
    "trl>=0.7.0",
    "peft>=0.7.0",
    "accelerate>=0.25.0",
    "bitsandbytes>=0.41.0",
    "tensorboard>=2.15.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "click>=8.0.0",
    "runpod>=1.0.0",
    "httpx>=0.25.0",
    "yaspin>=3.0.0",
    "aiofiles>=23.0.0",
    "tqdm>=4.65.0",
    "litellm>=1.0.0",
    "jsonpickle>=3.0.0",
    "claude-test-reporter @ git+https://github.com/grahama1970/claude-test-reporter.git@main",
    "llm-call @ git+https://github.com/grahama1970/llm_call.git",
    "fastapi>=0.115.12",
    "uvicorn>=0.34.2",
    "arxiv>=2.2.0",
    "deepeval>=1.0.0",
    "mlflow>=2.10.0",
    "lm-eval>=0.4.0",
    "pandas>=2.0.0",
    "plotly>=5.18.0",
    "jinja2>=3.1.0",
    "pydantic-settings>=2.9.1",
    "aiohttp>=3.12.4",
    "runpod_ops @ git+https://github.com/grahama1970/runpod_ops.git",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-json-report>=1.5.0",
    "pytest-html>=4.0.0",
    "pytest-cov>=4.0.0",
    "pytest-timeout>=2.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.scripts]
unsloth = "unsloth.cli.unified_typer_cli:app"
unsloth-cli = "unsloth.cli.main:app"
unsloth-mcp = "unsloth.cli.mcp_server:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
unsloth = ["templates/*.md"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "B", "C90", "UP", "YTT", "S", "A", "C4", "T10", "SIM", "ARG"]
ignore = ["E501", "S101", "S603", "S607"]

[tool.mypy]
python_version = "3.10"
strict = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--disable-warnings",
    "--json-report",
    "--json-report-file=docs/reports/test_report.json",
    "--html=docs/reports/test_report.html",
    "--self-contained-html",
    "--cov=src/unsloth",
    "--cov-report=html:docs/reports/coverage",
    "--cov-report=term-missing",
    "--cov-fail-under=0",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "smoke: Smoke tests",
    "performance: Performance tests",
    "slow: Tests that take > 5 seconds",
    "honeypot: Honeypot tests designed to fail",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
norecursedirs = [".git", ".tox", "dist", "build", "*.egg", "__pycache__"]
log_cli = true
log_cli_level = "INFO"

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
    "pytest-json-report>=1.5.0",
    "pytest-html>=4.0.0",
    "pytest-timeout>=2.0.0",
]
